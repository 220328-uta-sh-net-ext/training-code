name: .NET

on: # my trigger events
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # manually trigger the workflow

env:
  WORKING_DIRECTORY: 4-DevOps/PokemonApp

jobs:
  build:
    # We select which OS our VM's or runners to be
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3 # providing the runner with our source code
    - name: Setup .NET # we are downloading and installing .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ${{env.WORKING_DIRECTORY}}/PokemonApi
    - name: Build
      run: dotnet build --no-restore ${{env.WORKING_DIRECTORY}}/PokemonApi
    - name: Test
      run: dotnet test --no-build --verbosity normal ${{env.WORKING_DIRECTORY}}
  
  docker-image-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3 # providing the runner with our source code
    
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2.0.0
      
    - name: Docker Login
      uses: docker/login-action@v2.0.0
      with:
        # Username used to log against the Docker registry
        username: ${{secrets.DOCKERHUB_USERNAME}}
        # Password or personal access token used to log against the Docker registry
        password: ${{secrets.DOCKERHUB_PASS}}
        
    - name: Build and push Docker images
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
      uses: docker/build-push-action@v3.0.0
      with:
        # Path to the Dockerfile
        file: ${{env.WORKING_DIRECTORY}}/PokemonApi/Dockerfile
        # Push is a shorthand for --output=type=registry
        push: true
        # List of tags
        tags: sminseonong/pokemonapp:${{github.sha}}

